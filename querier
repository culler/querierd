#!/usr/bin/env python
# -*- coding: utf-8 -*-

# CopyrightÂ© 2014 by Marc Culler and others.
# This file is part of QuerierD.
#
# QuerierD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# QuerierD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with QuerierD.  If not, see <http://www.gnu.org/licenses/>.

import sys, os, time, subprocess
from ConfigParser import ConfigParser
config_file = '/etc/querierd'

def query_loop(interval, source_address):
    """
    Start a loop to send the packets using the nemesis program.
    """
    while True:
        # Send a query to the all multicast address.
        proc = subprocess.Popen(['/usr/local/bin/nemesis',
                                 'igmp',
                                 '-p', '17', # v1 query
                                 '-i', '224.0.0.251',
                                 '-S', source_address,
                                 '-D', '224.0.0.1'],
                                stdout=subprocess.PIPE,
                                stderr=subprocess.PIPE)
        output, error = proc.communicate()
        time.sleep(interval)

def main():
    if os.getuid() != 0:
        print 'The querierd daemon must be controlled by root.'
        sys.exit(1)

    config = ConfigParser()
    config.read(config_file)
    query_interval = int(config.get('querierd', 'query_interval'))
    network = config.get('querierd', 'network')

    ip = subprocess.Popen(['ip', 'route', 'get', network],
                          stdout=subprocess.PIPE)
    ip_result = ip.stdout.read().split()
    source_address = ip_result[1 + ip_result.index('src')]
    print 'querierd starting -- using address %s'%source_address
    query_loop(query_interval, source_address)

if __name__ == "__main__":
    main()

# Local Variables:
# coding: utf-8
